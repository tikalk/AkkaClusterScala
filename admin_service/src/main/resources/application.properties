info.app.name=Ant Smash Admin service
info.app.description=admin service
info.app.version=1.0.0
info.build.version=@project.version@



com.clearforest.troubleshoot=DEBUG

server.port = 8080
logging.file=${calais.root}/var/logs/localwebsite/localwebsite.log
spring.pid.file=${calais.root}/var/pids/localwebsite.pid

#calais
calais.root=target/

#web
endpoints.health.sensitive=false
endpoints.shutdown.enabled=true

security.user.name=admin
security.user.password=new_password



# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/antSmash?useSSL=false

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Username and password
spring.datasource.username = root


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.database = MYSQL
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create

spring.jpa.hibernate.ddl = true

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect




